# Copyright 2023, Intel Corporation
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in
#       the documentation and/or other materials provided with the
#       distribution.
#
#     * Neither the name of the copyright holder nor the names of its
#       contributors may be used to endorse or promote products derived
#       from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

- hosts: '{{ host }}'
  vars:
    newRegions: false

  tasks:
    - name: "Test if ndctl is installed"
      shell: which ndctl

    - name: "Unmount namespaces if they exist"
      shell: umount /dev/pmem* || true
    
    - name: "Destroy current namespaces"
      shell: |
        ndctl disable-namespace all
        ndctl destroy-namespace all

    - name: "Create new regions"
      block:
      - name: "Test if ipmctl is installed"
        shell: which ipmctl

      - name: "Create goal in AppDirectInterleaved mode"
        shell: ipmctl create -f -goal

      - name: "Reboot machine in order to apply new AppDirectInterleaved goal"
        reboot:
      when: newRegions == 'true'

    - name: "Create new namespace configuration"
      shell: |
        #!/usr/bin/env bash
        DEV_DAX_R=0x0000
        FS_DAX_R=0x0001

        function check_alignment() {
          local size=$1
          local interleave_width=$(sudo ipmctl show -dimm -socket 1 | grep "0x1" | wc -l)
          local size_alignment=$(expr $size % $interleave_width)

          if [ "$size_alignment" -gt "0" ]; then
            size=$(expr $size - $size_alignment + $interleave_width)
          fi

          echo "${size}G"
        }

        function create_devdax() {
          local align=$1
          local size=$2
          local size_option="-s $size"

          if [ -z "$size" ]; then
            size_option=""
          fi

          local cmd="sudo ndctl create-namespace --mode devdax -a ${align} ${size_option} -r ${DEV_DAX_R} -f"
          result=$(${cmd})
          if [ $? -ne 0 ]; then
            exit 1;
          fi
        }

        function create_fsdax() {
          local cmd="sudo ndctl create-namespace --mode fsdax -r ${FS_DAX_R} -f"
          result=$(${cmd})
          if [ $? -ne 0 ]; then
            exit 1;
          fi
        }

        BIG_NS_SIZE=$(check_alignment 55)
        SMALL_NS_SIZE=$(check_alignment 4)

        create_devdax 4k $SMALL_NS_SIZE
        create_devdax 4k $SMALL_NS_SIZE
        create_devdax 2m $SMALL_NS_SIZE
        create_devdax 2m $SMALL_NS_SIZE
        create_devdax 4k $BIG_NS_SIZE
        create_devdax 4k $BIG_NS_SIZE
        create_devdax 2m $BIG_NS_SIZE
        create_devdax 2m $BIG_NS_SIZE
        create_devdax 2m $SMALL_NS_SIZE

        create_fsdax

        sudo chmod 777 /dev/dax* || true
        sudo chmod a+rw /sys/bus/nd/devices/region*/deep_flush
        sudo chmod +r /sys/bus/nd/devices/ndbus*/region*/resource
        sudo chmod +r  /sys/bus/nd/devices/ndbus*/region*/dax*/resource